name: Deploy Artifacts/Documentation

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: "Run the steps without deploying anything"
        default: false
        type: boolean

      skip-github-release:
        description: "Skip creating a GitHub release"
        default: false
        type: boolean

      skip-maven-release:
        description: "Skip the Maven release and rollback steps"
        default: false
        type: boolean

      skip-pages:
        description: "Skip the creation and release of the documentation"
        default: false
        type: boolean

      skip-tests:
        description: "Skip unit and integration tests on Maven steps"
        default: false
        type: boolean

      version:
        description: "Override the deployment version (leave empty to compute the appropriate value)"
        default: ""
        type: string

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.determine_version_to_release.outputs.release_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Initialize Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 24

      - name: Compute release version
        id: determine_version_to_release
        run: |-
          if [[ '${{ inputs.version }}' == "" ]]; then
            release_version="$(./mvnw -B help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//g')"
          else
            release_version='${{ inputs.version }}'
          fi
          echo "release_version=${release_version}" >> "${GITHUB_OUTPUT}"

  maven-central-release:
    name: Maven Central Release
    runs-on: ubuntu-latest
    needs:
      - prepare
    permissions:
      contents: write
      id-token: write

    if: ${{ ! inputs.skip-maven-release }}

    environment:
      name: Maven Central
      url: https://repo1.maven.org/maven2/io/github/ascopes/protobuf-maven-plugin/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Initialize Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 24
          server-id: central
          server-username: CENTRAL_USERNAME
          server-password: CENTRAL_TOKEN
          gpg-passphrase: GPG_PASSPHRASE
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Install Protoc to $PATH
        run: scripts/install-protoc-to-github-runner.sh

      - name: Configure Git
        run: |-
          git config user.name '${{ github.actor }}'
          git config user.email '${{ github.actor }}@users.noreply.github.com'

      - name: Create Maven Central release
        run: |-
          ./mvnw -B -e \
              -DdryRun='${{ inputs.dry-run }}' \
              -Dinvoker.skip='${{ inputs.skip-tests }}' \
              -Dpassword='${{ secrets.GITHUB_TOKEN }}' \
              -DreleaseVersion="${{ needs.prepare.outputs.release_version }}" \
              -DsignTag=false \
              -DskipTests='${{ inputs.skip-tests }}' \
              -Dtag="v${{ needs.prepare.outputs.release_version }}" \
              clean verify release:prepare release:perform
        env:
          CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          CENTRAL_TOKEN: ${{ secrets.CENTRAL_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Revert Maven Central release
        if: ${{ failure() && ! inputs.dry-run }}
        run: |-
          ./mvnw -B -e \
              -Dpassword='${{ secrets.GITHUB_TOKEN }}' \
              -DreleaseVersion="${{ needs.prepare.outputs.release_version }}" \
              -Dtag="v${{ needs.prepare.outputs.release_version }}" \
              release:rollback

  github-pages-release:
    name: GitHub Pages Release
    runs-on: ubuntu-latest
    needs:
      - prepare
    permissions:
      id-token: write
      pages: write

    if: ${{ ! inputs.skip-pages }}

    environment:
      name: GitHub Pages
      url: https://${{ github.actor }}.github.io/protobuf-maven-plugin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Initialize Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 24

      - name: Generate site
        run: |-
          ./mvnw -B versions:set -DnewVersion="${{ needs.prepare.outputs.release_version }}"
          ./mvnw -B site -DskipTests -Dinvoker.skip

      - name: Upload site to GitHub API
        if: ${{ ! inputs.dry-run }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: protobuf-maven-plugin/target/site

      - name: Deploy site to GitHub Pages
        if: ${{ ! inputs.dry-run }}
        uses: actions/deploy-pages@v4

  github-release:
    name: GitHub Release
    runs-on: ubuntu-latest
    needs:
      - prepare
    permissions:
      contents: write
      id-token: write

    if: ${{ ! inputs.skip-github-release  }}

    environment:
      name: GitHub Releases
      url: https://github.com/${{ github.repository }}/releases

    steps:
      - name: Create GitHub release
        if: ${{ ! inputs.dry-run  }}
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ needs.prepare.outputs.release_version }}
          name: v${{ needs.prepare.outputs.release_version }}
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
