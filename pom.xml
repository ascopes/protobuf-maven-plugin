<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.ascopes</groupId>
  <artifactId>protobuf-maven-plugin</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>Protobuf Maven Plugin</name>
  <description>Maven Plugin that generates Java sources from Protocol Buffer source files.
  </description>

  <inceptionYear>2023</inceptionYear>

  <licenses>
    <license>
      <name>Apache License v2.0</name>
      <url>${project.url}/blob/main/LICENSE.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>ascopes</id>
      <name>Ashley Scopes</name>
      <email>ashleyscopes@outlook.com</email>
      <url>https://github.com/ascopes</url>
      <organization>Ashley Scopes</organization>
      <organizationUrl>https://github.com/ascopes</organizationUrl>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>Europe/London</timezone>
    </developer>
  </developers>

  <contributors/>

  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>${project-scm-url}/issues</url>
  </issueManagement>

  <organization>
    <name>Ashley Scopes (GitHub)</name>
    <url>${project.url}</url>
  </organization>

  <scm>
    <url>scm:git:${project-scm-url}</url>
    <connection>scm:git:${project-scm-url}</connection>
    <developerConnection>scm:git:${project-scm-url}</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <!-- Dependencies -->
    <assertj.version>3.24.2</assertj.version>
    <junit.version>5.10.0</junit.version>
    <maven-core.version>3.9.5</maven-core.version>
    <maven-plugin-annotations.version>3.9.0</maven-plugin-annotations.version>
    <maven-plugin-api.version>3.9.5</maven-plugin-api.version>
    <maven-plugin-testing-harness.version>3.3.0</maven-plugin-testing-harness.version>
    <mockito.version>5.6.0</mockito.version>
    <slf4j.version>2.0.9</slf4j.version>

    <!-- Plugins -->
    <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>    <license-maven-plugin.version>4.3</license-maven-plugin.version>
    <maven-checkstyle-plugin.version>3.3.0</maven-checkstyle-plugin.version>
    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <maven-failsafe-plugin.version>3.1.2</maven-failsafe-plugin.version>
    <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
    <maven-plugin-plugin.version>3.10.1</maven-plugin-plugin.version>
    <maven-surefire-plugin.version>3.2.1</maven-surefire-plugin.version>

    <!-- Plugin dependencies -->
    <checkstyle.version>10.12.4</checkstyle.version>
    <maven-surefire-junit5-tree-reporter.version>1.2.1</maven-surefire-junit5-tree-reporter.version>

    <!-- Other stuff -->
    <argLine>-Xshare:off</argLine>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project-organization-url>https://github.com/ascopes</project-organization-url>
    <project-scm-url>${project.organization.url}/protobuf-maven-plugin</project-scm-url>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-bom</artifactId>
        <version>${mockito.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>${maven-plugin-api.version}</version>
      <!-- Provided by Maven at runtime -->
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <version>${maven-plugin-annotations.version}</version>
      <!-- Provided by Maven at runtime -->
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${maven-core.version}</version>
      <!-- Provided by Maven at runtime -->
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
      <!-- Provided by Maven at runtime, so don't bundle it. -->
      <scope>provided</scope>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.plugin-testing</groupId>
      <artifactId>maven-plugin-testing-harness</artifactId>
      <version>${maven-plugin-testing-harness.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!-- Coverage tracing -->
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>

        <executions>
          <execution>
            <id>add-coverage-agent-to-surefire-args</id>
            <phase>initialize</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>

            <configuration>
              <destFile>${project.build.directory}/jacoco-unit.bin</destFile>
            </configuration>
          </execution>

          <execution>
            <id>report-unit-test-coverage</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-unit.bin</dataFile>
              <outputDirectory>${project.build.directory}/site/jacoco/unit</outputDirectory>
            </configuration>
          </execution>

          <execution>
            <id>add-coverage-agent-to-failsafe-args</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco-int.bin</destFile>
            </configuration>
          </execution>

          <execution>
            <id>report-integration-test-coverage</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report-integration</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-int.bin</dataFile>
              <outputDirectory>${project.build.directory}/site/jacoco/int</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- Java compiler config -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>

        <configuration>
          <compilerArgs>
            <compilerArg>-Xlint:all,-processing,-serial</compilerArg>
          </compilerArgs>
          <failOnWarning>true</failOnWarning>
          <showDeprecation>true</showDeprecation>
          <release>11</release>
        </configuration>
      </plugin>

      <plugin>
        <!-- Integration testing config -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>

        <configuration>
          <includes>
            <include>*IntegrationTest</include>
          </includes>

          <failIfNoTests>true</failIfNoTests>
          <runOrder>random</runOrder>

          <!--
            This block is needed to show @DisplayName and @ParameterizedTest
            in reports with the provided names.
          -->
          <statelessTestsetReporter
            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
            <disable>false</disable>
            <version>3.0</version>
            <usePhrasedFileName>false</usePhrasedFileName>
            <usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
            <usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
            <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
          </statelessTestsetReporter>
          <statelessTestsetInfoReporter
            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporterUnicode">
            <disable>false</disable>
            <printStacktraceOnError>true</printStacktraceOnError>
            <printStacktraceOnFailure>true</printStacktraceOnFailure>
            <usePhrasedFileName>false</usePhrasedFileName>
            <usePhrasedClassNameInRunning>true</usePhrasedClassNameInRunning>
            <usePhrasedClassNameInTestCaseSummary>true</usePhrasedClassNameInTestCaseSummary>
          </statelessTestsetInfoReporter>
        </configuration>

        <dependencies>
          <dependency>
            <groupId>me.fabriciorby</groupId>
            <artifactId>maven-surefire-junit5-tree-reporter</artifactId>
            <version>${maven-surefire-junit5-tree-reporter.version}</version>
          </dependency>
        </dependencies>

        <executions>
          <execution>
            <!-- Enable failsafe to run -->
            <id>integration-test</id>
            <!-- This must not run during the test phase - JaCoCo messes up the reporting! -->
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>

        <configuration>
          <archive>
            <index>true</index>
            <manifest>
              <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              <addExtensions>true</addExtensions>
            </manifest>
            <manifestEntries>
              <Sealed>true</Sealed>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>${maven-plugin-plugin.version}</version>
      </plugin>

      <plugin>
        <!-- Unit testing config -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>

        <configuration>
          <excludes>
            <exclude>*IntegrationTest</exclude>
          </excludes>

          <!--
            This block is needed to show @DisplayName and @ParameterizedTest
            in reports with the provided names.
          -->
          <statelessTestsetReporter
            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
            <disable>false</disable>
            <version>3.0</version>
            <usePhrasedFileName>false</usePhrasedFileName>
            <usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
            <usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
            <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
          </statelessTestsetReporter>
          <statelessTestsetInfoReporter
            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter">
            <disable>false</disable>
            <printStacktraceOnError>true</printStacktraceOnError>
            <printStacktraceOnFailure>true</printStacktraceOnFailure>
            <usePhrasedFileName>false</usePhrasedFileName>
            <usePhrasedClassNameInRunning>true</usePhrasedClassNameInRunning>
            <usePhrasedClassNameInTestCaseSummary>true</usePhrasedClassNameInTestCaseSummary>
          </statelessTestsetInfoReporter>
        </configuration>

        <dependencies>
          <dependency>
            <groupId>me.fabriciorby</groupId>
            <artifactId>maven-surefire-junit5-tree-reporter</artifactId>
            <version>${maven-surefire-junit5-tree-reporter.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <!-- Enforces our license header and allows adding it automatically to code. -->
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${license-maven-plugin.version}</version>

        <configuration>
          <!-- Useful flags: https://mycila.carbou.me/license-maven-plugin/ -->
          <licenseSets>
            <licenseSet>
              <header>.mvn/license/license-header.txt</header>
              <includes>
                <include>src/**/*.java</include>
                <include>src/**/*.proto</include>
              </includes>
            </licenseSet>
          </licenseSets>
          <mapping>
            <java>SLASHSTAR_STYLE</java>
          </mapping>
          <properties>
            <currentYear>2023</currentYear>
          </properties>
          <strictCheck>true</strictCheck>
        </configuration>

        <executions>
          <execution>
            <id>check-license-headers</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- Checking style of code matches the Google code style -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>

        <configuration>
          <configLocation>.mvn/checkstyle/checkstyle.xml</configLocation>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <includeResources>true</includeResources>
          <sourceDirectories>${project.basedir}/src</sourceDirectories>
          <suppressionsLocation>.mvn/checkstyle/suppressions.xml</suppressionsLocation>
          <violationSeverity>info</violationSeverity>
        </configuration>

        <dependencies>
          <dependency>
            <!-- Force the usage of checkstyle v10 rather than v8.28 -->
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>
